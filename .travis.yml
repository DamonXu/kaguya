sudo: false
language: cpp

compiler:
  - clang
  - g++
install:
  - if [ "$CXX" = "g++" ] && [ "$CXX_FLAGS" = "-std=c++11" ]; then export CXX="g++-4.8"; fi
addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    - kalakris-cmake
    packages:
    - liblua5.2-dev
    - libluajit-5.1-dev
    - libboost-all-dev
    - g++-4.8
    - llvm-gcc-4.6
    - cmake
env:
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++03 LUALIB=lua5.2
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++11 LUALIB=lua5.2
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++03 LUALIB=luajit
  - BUILD_TYPE=Release CXX_FLAGS=-std=c++11 LUALIB=luajit
script:
  - mkdir build && cd build && cmake ../ -DCMAKE_BUILD_TYPE=${BUILD_TYPE} -DCMAKE_CXX_FLAGS=${CXX_FLAGS} -DLUA_SEARCH_LIB_NAME=${LUALIB} && make && CTEST_OUTPUT_ON_FAILURE=1 make test
after_success:
  - cmake ../ -DCOVERAGE=1 -DCMAKE_BUILD_TYPE=Debug && make test_coverage && ./test_coverage
  - if [ "$CXX" = "g++-4.8" ]; then export GCOV="gcov-4.8"; fi
  - if [ "$CXX" = "g++" ]; then export GCOV="gcov-4.6"; fi
  - if [ "$CXX" = "clang++" ]; then export GCOV="llvm-gcov"; fi
  - bash <(curl -s https://codecov.io/bash) -p CMakeFiles/test_coverage.dir/test/ -x "$GCOV" -a "-o CMakeFiles/test_coverage.dir/test/"
